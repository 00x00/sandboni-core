<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sandboni.core</groupId>
    <artifactId>sandboni-core</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <modules>
        <module>sandboni-engine</module>
        <module>sandboni-scm</module>
    </modules>

    <url>https://github.com/jpmorganchase/sandboni-core</url>
    <name>Sandboni Intelligent Testing Parent</name>
    <description>
        Sandboni is a Java test optimization library which reduces test execution time without
        compromising quality, predicts defect probability and presents actionable test results
        which allows developers to take preemptive measure
    </description>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyy.MM.dd-HH.mm.ss</maven.build.timestamp.format>
        <project.build.timestamp>${maven.build.timestamp}</project.build.timestamp>
        <mvn.compiler.source>1.8</mvn.compiler.source>
        <mvn.compiler.target>1.8</mvn.compiler.target>
        <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
        <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>
        <!--versions-->
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <flatten-maven-plugin.version>1.0.1</flatten-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <cucumber.version>1.2.5</cucumber.version>
        <org.jacoco.version>0.8.3</org.jacoco.version>
        <bcel.version>6.2</bcel.version>
        <slf4j.version>1.7.25</slf4j.version>
        <org.jgrapht.version>1.0.1</org.jgrapht.version>
        <commons-io.version>2.5</commons-io.version>
        <gson.version>2.8.5</gson.version>
        <httpclient.version>4.5.2</httpclient.version>
        <hamcrest-library.version>1.3</hamcrest-library.version>
        <javax.ws.rs.version>1.0</javax.ws.rs.version>
        <javax.ws.rs-api.version>2.1</javax.ws.rs-api.version>
        <spring.version>2.0.5.RELEASE</spring.version>
        <jackson-databind.version>2.9.8</jackson-databind.version>
        <mockserver-netty.version>3.9.1</mockserver-netty.version>
        <jmh.version>1.19</jmh.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <org.eclipse.jgit.version>5.3.1.201904271842-r</org.eclipse.jgit.version>
        <org.eclipse.jgit.junit.version>5.1.3.201810200350-r</org.eclipse.jgit.junit.version>
        <validation-api.version>2.0.1.Final</validation-api.version>
        <junit.version>4.12</junit.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${mvn.compiler.source}</source>
                    <target>${mvn.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${org.jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-instrument</id>
                        <goals>
                            <goal>instrument</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-restore-instrumented-classes</id>
                        <goals>
                            <goal>restore-instrumented-classes</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest-library.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${org.jacoco.version}</version>
            <scope>test</scope>
            <classifier>runtime</classifier>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>${mockserver-netty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
    </dependencies>

    <scm>
        <url>https://github.com/jpmorganchase/sandboni-core</url>
        <connection>scm:git:https://github.com/jpmorganchase/sandboni-core.git</connection>
        <developerConnection>scm:git:https://github.com/jpmorganchase/sandboni-core.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <ciManagement>
        <url>https://travis-ci.com/jpmorganchase/sandboni-core</url>
    </ciManagement>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>LICENSE</url>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>spring-release</id>
            <url>http://repo.spring.io/libs-release</url>
            <snapshots><enabled>false</enabled></snapshots>
        </repository>
        <repository>
            <id>spring-snapshot</id>
            <url>http://repo.spring.io/libs-snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
    </repositories>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/jpmorganchase/sandboni-core/issues</url>
    </issueManagement>
</project>